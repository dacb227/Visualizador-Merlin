<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" 
	height="100%"
	paddingBottom="20" 
	paddingRight="20" 
	paddingTop="20" 
	paddingLeft="20"
	verticalAlign="middle"
	horizontalAlign="center"
	>
	
	<mx:Script>
		<![CDATA[
			import com.connectedpixel.charts.ScrollableAxisRenderer;
			
			import flash.events.KeyboardEvent;
			
			import mx.binding.utils.BindingUtils;
			import mx.charts.AxisRenderer;
			import mx.charts.CategoryAxis;
			import mx.charts.ChartItem;
			import mx.charts.HitData;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.controls.HorizontalList;
			import mx.core.Application;
			import mx.events.IndexChangedEvent;
			import mx.events.ModuleEvent;
			import mx.events.ResizeEvent;
			import mx.events.StateChangeEvent;
			import mx.formatters.NumberFormatter;
			
			[Bindable]private var listXML:XMLList = new XMLList("<value id=\"\" count=\"\"></value>");
			public var total:Number = 0;
			private var zoom:Number = 0;
			private var title:String = ""; 
			
			
			public function dataLoaded(xml:XML):void{		
				addEventListener(ResizeEvent.RESIZE, function show(evt:ResizeEvent):void{setSizeChart(zoom)});	
				addEventListener(MouseEvent.MOUSE_WHEEL, mouseWheel);
				//addEventListener(KeyboardEvent.KEY_DOWN, keyboardZoom);

				zoom = 0;
				var max:int = 0;
				this.title = xml.data.@title;
				var mySeries:Array = new Array;
				listXML = new XMLList(xml.data.columns.value);
				columnChart.dataProvider = listXML;
				for each(var series in xml.data.series.serie){
					var cs:ColumnSeries = new ColumnSeries;
					var lxml:XMLList = new XMLList(series.value);
					cs.dataProvider = lxml;
					cs.xField = "@id";
					cs.yField = "@count";
					cs.displayName = lxml[0];
					cs.setStyle("showDataEffect", slideIn);
					cs.setStyle("hideDataEffect", slideOut);
					mySeries.push(cs);
				}

				columnChart.series = mySeries;

				setSizeChart(0)
				setTitleChart(new XMLList(xml.restrictions));
			}
			
			private function setTitleChart(xml:XMLList):void{
				var t:String = "";
				for each(var item in xml.item){
					t+=item.column.toUpperCase()+" ";
					if(item.type == "rango"){
						t+=item.value[0]+" / "+item.value[1]+" ";
					}else{
						t+=item.value+" ";
					}
				}
				//text.text = title+" : "+t;
			}
			
			private function keyboardZoom(evt:KeyboardEvent):void{
				var tmpzoom:Number = zoom;
				var delta:Number = 0;
				if(evt.keyCode==107){
				 	delta = 1;
	                zoom += delta*100;
				}
				
				if(evt.keyCode==109){
					delta = -1; 
	                zoom += delta*100;
				}
                
                if(columnChart.width > chartContainer.width){
            		setSizeChart(zoom);
                }else if(zoom > tmpzoom){
                	setSizeChart(zoom);
                }else{zoom = tmpzoom}
                
			}
			
			private function mouseWheel(evt:MouseEvent):void{
				var tmpzoom:Number = zoom;
                zoom += evt.delta*100;
                
                if(columnChart.width > chartContainer.width){
            		setSizeChart(zoom);
                }else if(zoom > tmpzoom){
                	setSizeChart(zoom);
                }else{zoom = tmpzoom}
			}
			
			private function setSizeChart(zoom:Number):void{
				var w:int = container.width
				var cw:Number = w/16;
				chartContainer.width = w;
				
				if(listXML.length() > 12){
					columnChart.width = cw*listXML.length()+zoom;
										
 				}else{
					columnChart.width = cw*listXML.length()+200;//container.width; 
				}
				container.percentWidth = columnChart.width;
				//Alert.show(columnChart.width.toString()+" "+container.percentWidth.toString());
			}

		]]>
	</mx:Script>
	
	<mx:SeriesSlide  
        id="slideIn" 
        duration="1000" 
        direction="up"
    />
    <mx:SeriesSlide 
        id="slideOut" 
        duration="1000" 
        direction="down"
    />
	
	<mx:Text id="text" styleName="chartsText"/>
	
	<mx:VBox id="container" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
	<mx:HBox id="chartContainer" width="100%" height="100%" horizontalAlign="center">
	<mx:ColumnChart id="columnChart"
            dataProvider="{listXML}"
            showDataTips="true"
            type="stacked"
            width="100%"
            height="100%" >
      
	    <mx:horizontalAxis>
	    	<mx:CategoryAxis id="ca" categoryField="*" />
	    </mx:horizontalAxis>
	    
		<mx:horizontalAxisRenderers>
			<mx:AxisRenderer axis="{ca}" />		
		</mx:horizontalAxisRenderers>
    	
    </mx:ColumnChart>
    </mx:HBox>
    <mx:Legend 
    	width="100%"
    	id = "legend"
    	direction="horizontal"
    	dataProvider="{columnChart}"/>
    </mx:VBox> 
</mx:VBox>
